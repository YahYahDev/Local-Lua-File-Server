Local-Lua-File-Server:

	a barely functional server that is written using luasocket,
	able to support plugins and whitelists.


Dependencys:

	Note: the default configuration does not support windows, please see Server/Plugs/Default.plug
		  and Modules/Std/StdDir.lua if you want to change it to support being used on windows

	1): lua 5.2+ and maby luajit with a little tweaking

	2): lua-socket https://lunarmodules.github.io/luasocket/




Log:

	Note: there are two seperate log files one for the "server" and one for the "client"
		  the paths to said log files are in "server.lua" and "client.lua" in their init functions

	Doc:

		'log:Add(msg)' put a string you want to log in msg and it will log in Log.log

		'log:Error(msg)' put a string you want to log in msg and it will log in Log.log

		'duplicate logs' all duplicate logs are expressed as a ... at the end of the message




Plugs:

	Note: the plug system is a system to load lua functions at run time in the server
		  every interaction a client can do is through a plug to add plugs make a .plug file
		  in /src/Server/Plugs/whateveryouwant.plug

	Doc: please reference Default.plug for how to make a plugin


Configuration:

	Note: the config format goes [key] = [value1, value2, ect]
		  no multiline key value pairs and no commits for the time being,

	Example:
		```
		[whitelist] = [localhost, FriendsIpAddress, FamiliysIpAddress]
		[port] = [8888]
		[directory] = [/home/user/FileServer/Directory/]
		[ip] = [localhost]
		[plugdir] = [Server/Plugs]

		```

	1): 'directory' should be the absolute path to the root folder of the github repo

	2): 'whitelist' should be a list of [ips, you, want] to allow to accesse the server

	3): 'port' should be the port you have open for connections

	4): 'ip' should be the ip you want to connect to as a client

	5): 'plugdir' should be the path to plugins for the server.
			should not need  to change from default
			as long as the project structure is default


TODO:

	1): Pack dependencys with git repo or in the "make script"

	2): Implement a file transfer command/plugin for transfering files

	3): Implement concurancy
